{"ast":null,"code":"var _jsxFileName = \"/home/wande/Desktop/Irene MERN Stack/mern-final-project-irenenderitu/client/src/pages/Admin.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n\n// const Admin = () => {\n//   const [reports, setReports] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [selectedReport, setSelectedReport] = useState(null);\n//   const [stats, setStats] = useState({\n//     total: 0,\n//     pending: 0,\n//     underReview: 0,\n//     resolved: 0\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchReports();\n//   }, []);\n\n//   const fetchReports = async () => {\n//     try {\n//       // Try different endpoints - your backend might use one of these\n//       const res = await axios.get('/reports');\n//       setReports(res.data);\n//       calculateStats(res.data);\n//     } catch (error) {\n//       console.error('Error fetching reports:', error);\n//       // If the first endpoint fails, try alternatives\n//       try {\n//         const res = await axios.get('/reports');\n//         setReports(res.data);\n//         calculateStats(res.data);\n//       } catch (secondError) {\n//         console.error('Error with second attempt:', secondError);\n//         alert('Error fetching reports: ' + (secondError.response?.data?.message || 'Please check if the backend is running'));\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const calculateStats = (reportsData) => {\n//     const stats = {\n//       total: reportsData.length,\n//       pending: reportsData.filter(r => r.status === 'pending').length,\n//       underReview: reportsData.filter(r => r.status === 'under_review').length,\n//       resolved: reportsData.filter(r => r.status === 'resolved').length\n//     };\n//     setStats(stats);\n//   };\n\n//   const updateReportStatus = async (reportId, newStatus) => {\n//     try {\n//       await axios.patch(`/reports/${reportId}/status`, { status: newStatus });\n\n//       // Update local state\n//       const updatedReports = reports.map(report => \n//         report._id === reportId ? { ...report, status: newStatus } : report\n//       );\n\n//       setReports(updatedReports);\n//       calculateStats(updatedReports);\n\n//       if (selectedReport && selectedReport._id === reportId) {\n//         setSelectedReport({ ...selectedReport, status: newStatus });\n//       }\n\n//       alert('Report status updated successfully!');\n//     } catch (error) {\n//       alert('Error updating report status: ' + (error.response?.data?.message || 'Something went wrong'));\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     // Clear local storage\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n\n//     // Clear axios headers\n//     delete axios.defaults.headers.common['Authorization'];\n\n//     // Redirect to landing page\n//     navigate('/');\n\n//     // Optional: Show logout message\n//     alert('You have been logged out successfully.');\n//   };\n\n//   const getStatusColor = (status) => {\n//     switch (status) {\n//       case 'pending': return '#ffc107';\n//       case 'under_review': return '#17a2b8';\n//       case 'resolved': return '#28a745';\n//       default: return '#6c757d';\n//     }\n//   };\n\n//   const getStatusText = (status) => {\n//     switch (status) {\n//       case 'pending': return 'PENDING';\n//       case 'under_review': return 'UNDER REVIEW';\n//       case 'resolved': return 'RESOLVED';\n//       default: return status?.toUpperCase() || 'UNKNOWN';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) return 'Date not available';\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   // Debug: Check what data we're receiving\n//   useEffect(() => {\n//     if (reports.length > 0) {\n//       console.log('Reports data:', reports);\n//     }\n//   }, [reports]);\n\n//   if (loading) {\n//     return (\n//       <div style={styles.loadingContainer}>\n//         <div style={styles.spinner}></div>\n//         <p>Loading reports...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Header */}\n//       <div style={styles.header}>\n//         <div style={styles.headerContent}>\n//           <h1 style={styles.title}>Admin Dashboard</h1>\n//           <p style={styles.subtitle}>Manage and process all user reports</p>\n//         </div>\n//         <div style={styles.headerActions}>\n//           <button \n//             onClick={fetchReports}\n//             style={styles.refreshButton}\n//           >\n//             🔄 Refresh Reports\n//           </button>\n//           <button \n//             onClick={handleLogout}\n//             style={styles.logoutButton}\n//           >\n//             🚪 Logout\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Statistics */}\n//       <div style={styles.statsGrid}>\n//         <div style={styles.statCard}>\n//           <div style={styles.statIcon}>📊</div>\n//           <div style={styles.statInfo}>\n//             <div style={styles.statNumber}>{stats.total}</div>\n//             <div style={styles.statLabel}>Total Reports</div>\n//           </div>\n//         </div>\n//         <div style={styles.statCard}>\n//           <div style={styles.statIcon}>⏳</div>\n//           <div style={styles.statInfo}>\n//             <div style={styles.statNumber}>{stats.pending}</div>\n//             <div style={styles.statLabel}>Pending</div>\n//           </div>\n//         </div>\n//         <div style={styles.statCard}>\n//           <div style={styles.statIcon}>🔍</div>\n//           <div style={styles.statInfo}>\n//             <div style={styles.statNumber}>{stats.underReview}</div>\n//             <div style={styles.statLabel}>Under Review</div>\n//           </div>\n//         </div>\n//         <div style={styles.statCard}>\n//           <div style={styles.statIcon}>✅</div>\n//           <div style={styles.statInfo}>\n//             <div style={styles.statNumber}>{stats.resolved}</div>\n//             <div style={styles.statLabel}>Resolved</div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div style={styles.content}>\n//         {/* Reports List */}\n//         <div style={styles.reportsSection}>\n//           <h2 style={styles.sectionTitle}>All User Reports ({reports.length})</h2>\n//           <div style={styles.reportsList}>\n//             {reports.length === 0 ? (\n//               <div style={styles.emptyState}>\n//                 <div style={styles.emptyIcon}>📋</div>\n//                 <h3>No reports found</h3>\n//                 <p>There are no reports in the system yet.</p>\n//                 <button onClick={fetchReports} style={styles.retryButton}>\n//                   🔄 Try Again\n//                 </button>\n//               </div>\n//             ) : (\n//               reports.map(report => (\n//                 <div \n//                   key={report._id} \n//                   style={{\n//                     ...styles.reportItem,\n//                     ...(selectedReport?._id === report._id ? styles.selectedReport : {})\n//                   }}\n//                   onClick={() => setSelectedReport(report)}\n//                 >\n//                   <div style={styles.reportHeader}>\n//                     <div style={styles.reportBasicInfo}>\n//                       <h4 style={styles.reportId}>\n//                         {report.reportId ? `Report #${report.reportId}` : `Report ${report._id?.slice(-6) || 'N/A'}`}\n//                       </h4>\n//                       <span style={styles.reportDate}>\n//                         {formatDate(report.createdAt)}\n//                       </span>\n//                     </div>\n//                     <div style={styles.statusSection}>\n//                       <span \n//                         style={{\n//                           ...styles.statusBadge,\n//                           backgroundColor: getStatusColor(report.status)\n//                         }}\n//                       >\n//                         {getStatusText(report.status)}\n//                       </span>\n//                     </div>\n//                   </div>\n\n//                   <div style={styles.reportPreview}>\n//                     <p style={styles.incidentType}>\n//                       <strong>Type:</strong> {report.incidentType ? report.incidentType.replace(/_/g, ' ').toUpperCase() : 'Not specified'}\n//                     </p>\n//                     <p style={styles.reportDescription}>\n//                       {report.description && report.description.length > 100 \n//                         ? `${report.description.substring(0, 100)}...` \n//                         : report.description || 'No description provided'}\n//                     </p>\n//                     <div style={styles.reportMeta}>\n//                       <span style={styles.metaItem}>\n//                         👤 {report.isAnonymous ? 'Anonymous' : (report.user?.name || report.userId?.name || 'User')}\n//                       </span>\n//                       <span style={styles.metaItem}>\n//                         📍 {report.location?.address || report.location || 'Location not specified'}\n//                       </span>\n//                       {report.evidence && report.evidence.length > 0 && (\n//                         <span style={styles.metaItem}>\n//                           📎 {report.evidence.length} file(s)\n//                         </span>\n//                       )}\n//                     </div>\n//                   </div>\n//                 </div>\n//               ))\n//             )}\n//           </div>\n//         </div>\n\n//         {/* Report Details */}\n//         {selectedReport && (\n//           <div style={styles.detailsSection}>\n//             <div style={styles.detailsHeader}>\n//               <h2 style={styles.detailsTitle}>\n//                 {selectedReport.reportId ? `Report #${selectedReport.reportId}` : `Report ${selectedReport._id?.slice(-6) || 'N/A'}`}\n//               </h2>\n//               <button \n//                 onClick={() => setSelectedReport(null)}\n//                 style={styles.closeButton}\n//               >\n//                 ×\n//               </button>\n//             </div>\n\n//             <div style={styles.detailsContent}>\n//               {/* Status Update Section */}\n//               <div style={styles.actionSection}>\n//                 <h3 style={styles.sectionSubtitle}>Update Status</h3>\n//                 <div style={styles.statusButtons}>\n//                   <button\n//                     onClick={() => updateReportStatus(selectedReport._id, 'pending')}\n//                     style={{\n//                       ...styles.statusButton,\n//                       ...(selectedReport.status === 'pending' ? styles.statusButtonActive : {})\n//                     }}\n//                   >\n//                     ⏳ Pending\n//                   </button>\n//                   <button\n//                     onClick={() => updateReportStatus(selectedReport._id, 'under_review')}\n//                     style={{\n//                       ...styles.statusButton,\n//                       ...(selectedReport.status === 'under_review' ? styles.statusButtonActive : {})\n//                     }}\n//                   >\n//                     🔍 Under Review\n//                   </button>\n//                   <button\n//                     onClick={() => updateReportStatus(selectedReport._id, 'resolved')}\n//                     style={{\n//                       ...styles.statusButton,\n//                       ...(selectedReport.status === 'resolved' ? styles.statusButtonActive : {})\n//                     }}\n//                   >\n//                     ✅ Resolved\n//                   </button>\n//                 </div>\n//               </div>\n\n//               {/* Report Details */}\n//               <div style={styles.detailSection}>\n//                 <h3 style={styles.sectionSubtitle}>Report Details</h3>\n//                 <div style={styles.detailGrid}>\n//                   <div style={styles.detailItem}>\n//                     <strong>Report ID:</strong> {selectedReport.reportId ? `#${selectedReport.reportId}` : selectedReport._id?.slice(-6) || 'N/A'}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Submitted:</strong> {formatDate(selectedReport.createdAt)}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Incident Type:</strong> {selectedReport.incidentType ? selectedReport.incidentType.replace(/_/g, ' ').toUpperCase() : 'Not specified'}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Incident Date:</strong> {formatDate(selectedReport.dateTime)}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Location:</strong> {selectedReport.location?.address || selectedReport.location || 'Not specified'}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Anonymous:</strong> {selectedReport.isAnonymous ? 'Yes' : 'No'}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Reported by:</strong> {selectedReport.isAnonymous ? 'Anonymous' : (selectedReport.user?.name || selectedReport.userId?.name || 'User')}\n//                   </div>\n//                   {!selectedReport.isAnonymous && (selectedReport.user?.email || selectedReport.userId?.email) && (\n//                     <div style={styles.detailItem}>\n//                       <strong>User Email:</strong> {selectedReport.user?.email || selectedReport.userId?.email}\n//                     </div>\n//                   )}\n//                 </div>\n//               </div>\n\n//               {/* Description */}\n//               <div style={styles.detailSection}>\n//                 <h3 style={styles.sectionSubtitle}>Description</h3>\n//                 <div style={styles.descriptionBox}>\n//                   {selectedReport.description || 'No description provided'}\n//                 </div>\n//               </div>\n\n//               {/* Evidence */}\n//               {selectedReport.evidence && selectedReport.evidence.length > 0 && (\n//                 <div style={styles.detailSection}>\n//                   <h3 style={styles.sectionSubtitle}>\n//                     Evidence ({selectedReport.evidence.length} file(s))\n//                   </h3>\n//                   <div style={styles.evidenceList}>\n//                     {selectedReport.evidence.map((file, index) => (\n//                       <a \n//                         key={index}\n//                         href={`http://localhost:5000/${file}`}\n//                         target=\"_blank\"\n//                         rel=\"noopener noreferrer\"\n//                         style={styles.evidenceItem}\n//                       >\n//                         <span style={styles.evidenceIcon}>📎</span>\n//                         <span style={styles.evidenceText}>\n//                           Evidence {index + 1} - {file}\n//                         </span>\n//                         <span style={styles.evidenceArrow}>→</span>\n//                       </a>\n//                     ))}\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Current Status Display */}\n//               <div style={styles.detailSection}>\n//                 <h3 style={styles.sectionSubtitle}>Current Status</h3>\n//                 <div style={{\n//                   ...styles.statusBadge,\n//                   backgroundColor: getStatusColor(selectedReport.status),\n//                   fontSize: '14px',\n//                   padding: '8px 16px',\n//                   display: 'inline-block'\n//                 }}>\n//                   {getStatusText(selectedReport.status)}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {!selectedReport && reports.length > 0 && (\n//           <div style={styles.noSelection}>\n//             <div style={styles.noSelectionIcon}>📋</div>\n//             <h3>Select a Report</h3>\n//             <p>Click on a report from the list to view details and update its status.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     padding: '1rem',\n//     maxWidth: '1400px',\n//     margin: '0 auto',\n//     backgroundColor: '#f8f9fa',\n//     minHeight: '100vh'\n//   },\n//   loadingContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     height: '50vh',\n//     color: '#666'\n//   },\n//   spinner: {\n//     width: '40px',\n//     height: '40px',\n//     border: '4px solid #f3f3f3',\n//     borderTop: '4px solid #007bff',\n//     borderRadius: '50%',\n//     animation: 'spin 1s linear infinite',\n//     marginBottom: '1rem'\n//   },\n//   header: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     marginBottom: '2rem',\n//     flexWrap: 'wrap',\n//     gap: '1rem'\n//   },\n//   headerContent: {\n//     flex: 1\n//   },\n//   title: {\n//     fontSize: '2.5rem',\n//     fontWeight: '600',\n//     color: '#2c3e50',\n//     margin: '0 0 0.5rem 0'\n//   },\n//   subtitle: {\n//     fontSize: '1.2rem',\n//     color: '#6c757d',\n//     margin: 0\n//   },\n//   headerActions: {\n//     display: 'flex',\n//     gap: '1rem',\n//     alignItems: 'center'\n//   },\n//   refreshButton: {\n//     padding: '10px 20px',\n//     backgroundColor: '#28a745',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     fontSize: '1rem',\n//     fontWeight: '500',\n//     transition: 'background-color 0.3s',\n//     '&:hover': {\n//       backgroundColor: '#218838'\n//     }\n//   },\n//   logoutButton: {\n//     padding: '10px 20px',\n//     backgroundColor: '#dc3545',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     fontSize: '1rem',\n//     fontWeight: '500',\n//     transition: 'background-color 0.3s',\n//     '&:hover': {\n//       backgroundColor: '#c82333'\n//     }\n//   },\n//   statsGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(2, 1fr)',\n//     gap: '1rem',\n//     marginBottom: '2rem'\n//   },\n//   statCard: {\n//     backgroundColor: 'white',\n//     padding: '1.5rem',\n//     borderRadius: '12px',\n//     boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '1rem'\n//   },\n//   statIcon: {\n//     fontSize: '2rem'\n//   },\n//   statInfo: {\n//     flex: 1\n//   },\n//   statNumber: {\n//     fontSize: '2rem',\n//     fontWeight: 'bold',\n//     color: '#007bff',\n//     marginBottom: '0.25rem'\n//   },\n//   statLabel: {\n//     color: '#6c757d',\n//     fontWeight: '500',\n//     fontSize: '0.9rem'\n//   },\n//   content: {\n//     display: 'grid',\n//     gridTemplateColumns: '1fr 2fr',\n//     gap: '2rem',\n//     minHeight: '600px'\n//   },\n//   reportsSection: {\n//     backgroundColor: 'white',\n//     borderRadius: '12px',\n//     padding: '1.5rem',\n//     boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n//     display: 'flex',\n//     flexDirection: 'column'\n//   },\n//   sectionTitle: {\n//     fontSize: '1.5rem',\n//     color: '#2c3e50',\n//     margin: '0 0 1.5rem 0',\n//     fontWeight: '600'\n//   },\n//   reportsList: {\n//     flex: 1,\n//     overflowY: 'auto',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '1rem'\n//   },\n//   reportItem: {\n//     padding: '1.25rem',\n//     border: '2px solid #f1f3f4',\n//     borderRadius: '8px',\n//     cursor: 'pointer',\n//     transition: 'all 0.3s ease'\n//   },\n//   selectedReport: {\n//     borderColor: '#007bff',\n//     backgroundColor: '#f0f8ff'\n//   },\n//   reportHeader: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'flex-start',\n//     marginBottom: '0.75rem'\n//   },\n//   reportBasicInfo: {\n//     flex: 1\n//   },\n//   reportId: {\n//     margin: '0 0 0.25rem 0',\n//     color: '#2c3e50',\n//     fontSize: '1rem',\n//     fontWeight: '600'\n//   },\n//   reportDate: {\n//     color: '#6c757d',\n//     fontSize: '0.8rem'\n//   },\n//   statusSection: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '0.25rem',\n//     alignItems: 'flex-end'\n//   },\n//   statusBadge: {\n//     padding: '4px 8px',\n//     borderRadius: '12px',\n//     color: 'white',\n//     fontSize: '10px',\n//     fontWeight: 'bold',\n//     textTransform: 'uppercase'\n//   },\n//   reportPreview: {\n//     color: '#666'\n//   },\n//   incidentType: {\n//     margin: '0 0 0.5rem 0',\n//     fontSize: '0.9rem'\n//   },\n//   reportDescription: {\n//     margin: '0 0 0.75rem 0',\n//     fontSize: '0.85rem',\n//     lineHeight: '1.4'\n//   },\n//   reportMeta: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '0.25rem'\n//   },\n//   metaItem: {\n//     fontSize: '0.8rem',\n//     color: '#6c757d'\n//   },\n//   detailsSection: {\n//     backgroundColor: 'white',\n//     borderRadius: '12px',\n//     padding: '1.5rem',\n//     boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n//     display: 'flex',\n//     flexDirection: 'column'\n//   },\n//   noSelection: {\n//     backgroundColor: 'white',\n//     borderRadius: '12px',\n//     padding: '3rem',\n//     boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     textAlign: 'center',\n//     color: '#666'\n//   },\n//   noSelectionIcon: {\n//     fontSize: '3rem',\n//     marginBottom: '1rem'\n//   },\n//   detailsHeader: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     marginBottom: '1.5rem',\n//     paddingBottom: '1rem',\n//     borderBottom: '1px solid #f1f3f4'\n//   },\n//   detailsTitle: {\n//     margin: 0,\n//     color: '#2c3e50',\n//     fontSize: '1.5rem',\n//     fontWeight: '600'\n//   },\n//   closeButton: {\n//     background: 'none',\n//     border: 'none',\n//     fontSize: '1.5rem',\n//     color: '#6c757d',\n//     cursor: 'pointer',\n//     padding: '0.25rem'\n//   },\n//   detailsContent: {\n//     flex: 1,\n//     overflowY: 'auto',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '1.5rem'\n//   },\n//   actionSection: {\n//     padding: '1rem',\n//     backgroundColor: '#f8f9fa',\n//     borderRadius: '8px',\n//     border: '1px solid #e9ecef'\n//   },\n//   sectionSubtitle: {\n//     fontSize: '1.1rem',\n//     color: '#2c3e50',\n//     margin: '0 0 1rem 0',\n//     fontWeight: '600'\n//   },\n//   statusButtons: {\n//     display: 'flex',\n//     gap: '0.5rem',\n//     flexWrap: 'wrap'\n//   },\n//   statusButton: {\n//     padding: '8px 16px',\n//     border: '2px solid #e9ecef',\n//     borderRadius: '6px',\n//     backgroundColor: 'white',\n//     cursor: 'pointer',\n//     fontSize: '0.9rem',\n//     fontWeight: '500',\n//     transition: 'all 0.3s ease'\n//   },\n//   statusButtonActive: {\n//     borderColor: '#007bff',\n//     backgroundColor: '#007bff',\n//     color: 'white'\n//   },\n//   detailSection: {\n//     padding: '1rem 0',\n//     borderBottom: '1px solid #f1f3f4'\n//   },\n//   detailGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n//     gap: '0.75rem'\n//   },\n//   detailItem: {\n//     fontSize: '0.9rem',\n//     color: '#666'\n//   },\n//   descriptionBox: {\n//     padding: '1rem',\n//     backgroundColor: '#f8f9fa',\n//     borderRadius: '6px',\n//     border: '1px solid #e9ecef',\n//     fontSize: '0.9rem',\n//     lineHeight: '1.5',\n//     color: '#666'\n//   },\n//   evidenceList: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '0.5rem'\n//   },\n//   evidenceItem: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '0.75rem',\n//     padding: '0.75rem',\n//     backgroundColor: '#f8f9fa',\n//     border: '1px solid #e9ecef',\n//     borderRadius: '6px',\n//     textDecoration: 'none',\n//     color: '#495057',\n//     transition: 'all 0.3s ease'\n//   },\n//   evidenceIcon: {\n//     fontSize: '1rem'\n//   },\n//   evidenceText: {\n//     flex: 1,\n//     fontSize: '0.9rem'\n//   },\n//   evidenceArrow: {\n//     color: '#007bff',\n//     fontWeight: 'bold'\n//   },\n//   emptyState: {\n//     textAlign: 'center',\n//     padding: '3rem 2rem',\n//     color: '#666'\n//   },\n//   emptyIcon: {\n//     fontSize: '3rem',\n//     marginBottom: '1rem'\n//   },\n//   retryButton: {\n//     padding: '10px 20px',\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     fontSize: '1rem',\n//     fontWeight: '500',\n//     marginTop: '1rem',\n//     '&:hover': {\n//       backgroundColor: '#0056b3'\n//     }\n//   }\n// };\n\n// // Add CSS animations\n// const additionalStyles = `\n//   @keyframes spin {\n//     0% { transform: rotate(0deg); }\n//     100% { transform: rotate(360deg); }\n//   }\n\n//   .reportItem:hover {\n//     border-color: #007bff;\n//     background-color: #f8f9fa;\n//   }\n\n//   .statusButton:hover {\n//     border-color: #007bff;\n//     background-color: #f0f8ff;\n//   }\n\n//   .evidenceItem:hover {\n//     background-color: #e9ecef;\n//     border-color: #007bff;\n//   }\n\n//   .logoutButton:hover {\n//     background-color: #c82333;\n//   }\n\n//   @media (max-width: 1024px) {\n//     .content {\n//       grid-template-columns: 1fr;\n//     }\n\n//     .statsGrid {\n//       grid-template-columns: 1fr;\n//     }\n\n//     .header {\n//       flex-direction: column;\n//       text-align: center;\n//     }\n\n//     .headerActions {\n//       justify-content: center;\n//     }\n//   }\n// `;\n\n// // Inject styles\n// if (typeof document !== 'undefined') {\n//   const style = document.createElement('style');\n//   style.textContent = additionalStyles;\n//   document.head.appendChild(style);\n// }\n\n// export default Admin;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Admin = () => {\n  _s();\n  var _selectedReport$_id;\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [stats, setStats] = useState({\n    total: 0,\n    pending: 0,\n    underReview: 0,\n    resolved: 0\n  });\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchReports();\n  }, []);\n  const fetchReports = async () => {\n    try {\n      const res = await axios.get('/reports');\n      setReports(res.data);\n      calculateStats(res.data);\n    } catch (error) {\n      console.error('Error fetching reports:', error);\n      alert('Error fetching reports. Please check your backend connection.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const calculateStats = reportsData => {\n    const stats = {\n      total: reportsData.length,\n      pending: reportsData.filter(r => r.status === 'pending').length,\n      underReview: reportsData.filter(r => r.status === 'under_review').length,\n      resolved: reportsData.filter(r => r.status === 'resolved').length\n    };\n    setStats(stats);\n  };\n  const updateReportStatus = async (reportId, newStatus) => {\n    try {\n      await axios.patch(`/reports/${reportId}/status`, {\n        status: newStatus\n      });\n      const updatedReports = reports.map(report => report._id === reportId ? {\n        ...report,\n        status: newStatus\n      } : report);\n      setReports(updatedReports);\n      calculateStats(updatedReports);\n      if (selectedReport && selectedReport._id === reportId) {\n        setSelectedReport({\n          ...selectedReport,\n          status: newStatus\n        });\n      }\n      alert('Report status updated successfully!');\n    } catch (error) {\n      alert('Error updating report status.');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    navigate('/');\n    alert('Logged out successfully.');\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'pending':\n        return '#ffc107';\n      case 'under_review':\n        return '#17a2b8';\n      case 'resolved':\n        return '#28a745';\n      default:\n        return '#6c757d';\n    }\n  };\n  const getStatusText = status => {\n    switch (status) {\n      case 'pending':\n        return 'PENDING';\n      case 'under_review':\n        return 'UNDER REVIEW';\n      case 'resolved':\n        return 'RESOLVED';\n      default:\n        return (status === null || status === void 0 ? void 0 : status.toUpperCase()) || 'UNKNOWN';\n    }\n  };\n  const formatDate = dateString => {\n    if (!dateString) return 'Date not available';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.loadingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.spinner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading reports...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.headerContent,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: styles.title,\n          children: \"Admin Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.subtitle,\n          children: \"Manage and process all user reports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"headerActions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchReports,\n          style: styles.refreshButton,\n          children: \"\\uD83D\\uDD04 Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          style: styles.logoutButton,\n          children: \"\\uD83D\\uDEAA Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statsGrid\",\n      children: [{\n        icon: '📊',\n        label: 'Total Reports',\n        value: stats.total\n      }, {\n        icon: '⏳',\n        label: 'Pending',\n        value: stats.pending\n      }, {\n        icon: '🔍',\n        label: 'Under Review',\n        value: stats.underReview\n      }, {\n        icon: '✅',\n        label: 'Resolved',\n        value: stats.resolved\n      }].map((stat, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"statCard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"statIcon\",\n          children: stat.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statNumber\",\n            children: stat.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 957,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statLabel\",\n            children: stat.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 958,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 954,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reportsSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: styles.sectionTitle,\n          children: [\"All Reports (\", reports.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reportsList\",\n          children: reports.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.emptyState,\n            children: \"No reports found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 15\n          }, this) : reports.map(report => {\n            var _report$_id, _report$description;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `reportItem ${(selectedReport === null || selectedReport === void 0 ? void 0 : selectedReport._id) === report._id ? 'selected' : ''}`,\n              onClick: () => setSelectedReport(report),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: styles.reportHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: styles.reportId,\n                    children: report.reportId ? `Report #${report.reportId}` : `Report ${(_report$_id = report._id) === null || _report$_id === void 0 ? void 0 : _report$_id.slice(-6)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 980,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: styles.reportDate,\n                    children: formatDate(report.createdAt)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 983,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 979,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    ...styles.statusBadge,\n                    backgroundColor: getStatusColor(report.status)\n                  },\n                  children: getStatusText(report.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 978,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Type:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 992,\n                  columnNumber: 22\n                }, this), \" \", report.incidentType || 'Not specified']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: ((_report$description = report.description) === null || _report$description === void 0 ? void 0 : _report$description.slice(0, 100)) || 'No description'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 993,\n                columnNumber: 19\n              }, this)]\n            }, report._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 973,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 9\n      }, this), selectedReport && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detailsSection\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"detailsHeader\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedReport.reportId ? `Report #${selectedReport.reportId}` : `Report ${(_selectedReport$_id = selectedReport._id) === null || _selectedReport$_id === void 0 ? void 0 : _selectedReport$_id.slice(-6)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1004,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedReport(null),\n            style: styles.closeButton,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.detailsContent,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1008,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statusButtons\",\n            children: ['pending', 'under_review', 'resolved'].map(st => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateReportStatus(selectedReport._id, st),\n              className: `statusButton ${selectedReport.status === st ? 'active' : ''}`,\n              children: getStatusText(st)\n            }, st, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1020,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.descriptionBox,\n            children: selectedReport.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1007,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1002,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 933,\n    columnNumber: 5\n  }, this);\n};\n_s(Admin, \"LqjeGZ63Uu3Sk6U4PgL1N3bU3YE=\", false, function () {\n  return [useNavigate];\n});\n_c = Admin;\nconst styles = {\n  container: {\n    padding: '1rem',\n    background: '#f8f9fa',\n    minHeight: '100vh'\n  },\n  loadingContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '60vh'\n  },\n  spinner: {\n    width: '40px',\n    height: '40px',\n    border: '4px solid #eee',\n    borderTop: '4px solid #007bff',\n    borderRadius: '50%',\n    animation: 'spin 1s linear infinite'\n  },\n  headerContent: {\n    flex: 1\n  },\n  title: {\n    fontSize: '2rem',\n    fontWeight: '600',\n    color: '#2c3e50'\n  },\n  subtitle: {\n    color: '#6c757d'\n  },\n  refreshButton: {\n    background: '#28a745',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '6px',\n    padding: '10px 15px',\n    cursor: 'pointer'\n  },\n  logoutButton: {\n    background: '#dc3545',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '6px',\n    padding: '10px 15px',\n    cursor: 'pointer'\n  },\n  sectionTitle: {\n    fontSize: '1.5rem',\n    fontWeight: '600',\n    marginBottom: '1rem'\n  },\n  reportHeader: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  reportId: {\n    margin: 0\n  },\n  reportDate: {\n    fontSize: '0.8rem',\n    color: '#6c757d'\n  },\n  statusBadge: {\n    padding: '4px 8px',\n    borderRadius: '8px',\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: '0.75rem'\n  },\n  closeButton: {\n    border: 'none',\n    background: 'transparent',\n    fontSize: '1.5rem',\n    cursor: 'pointer'\n  },\n  detailsContent: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '1rem'\n  },\n  descriptionBox: {\n    background: '#f8f9fa',\n    padding: '1rem',\n    borderRadius: '6px',\n    border: '1px solid #e9ecef'\n  },\n  emptyState: {\n    textAlign: 'center',\n    color: '#6c757d',\n    padding: '2rem'\n  }\n};\n\n// Inject responsive CSS\nif (typeof document !== 'undefined') {\n  const css = `\n    @keyframes spin { 0%{transform:rotate(0)}100%{transform:rotate(360deg)} }\n\n    .header { display:flex; justify-content:space-between; align-items:center; flex-wrap:wrap; gap:1rem; }\n    .headerActions { display:flex; gap:1rem; flex-wrap:wrap; }\n\n    .statsGrid { display:grid; grid-template-columns:repeat(auto-fit,minmax(200px,1fr)); gap:1rem; margin-bottom:2rem; }\n    .statCard { background:white; display:flex; align-items:center; gap:1rem; padding:1rem; border-radius:12px; box-shadow:0 2px 8px rgba(0,0,0,0.1); }\n    .statIcon { font-size:2rem; }\n    .statNumber { font-size:1.8rem; font-weight:bold; color:#007bff; }\n\n    .content { display:grid; grid-template-columns:1fr 2fr; gap:2rem; }\n    .reportsSection, .detailsSection { background:white; border-radius:12px; padding:1.5rem; box-shadow:0 2px 8px rgba(0,0,0,0.1); }\n\n    .reportsList { max-height:70vh; overflow-y:auto; display:flex; flex-direction:column; gap:1rem; }\n    .reportItem { border:1px solid #e9ecef; padding:1rem; border-radius:8px; cursor:pointer; transition:all .3s; }\n    .reportItem:hover { background:#f8f9fa; }\n    .reportItem.selected { border-color:#007bff; background:#f0f8ff; }\n\n    .detailsHeader { display:flex; justify-content:space-between; align-items:center; border-bottom:1px solid #e9ecef; margin-bottom:1rem; padding-bottom:.5rem; }\n    .statusButtons { display:flex; flex-wrap:wrap; gap:.5rem; }\n    .statusButton { border:1px solid #ddd; background:white; padding:.5rem 1rem; border-radius:6px; cursor:pointer; }\n    .statusButton.active { background:#007bff; color:white; }\n\n    @media(max-width:1024px){\n      .content{grid-template-columns:1fr;}\n    }\n\n    @media(max-width:600px){\n      .header{text-align:center;}\n      .statsGrid{grid-template-columns:1fr;}\n      .headerActions{justify-content:center;}\n      .statNumber{font-size:1.5rem;}\n    }\n  `;\n  const style = document.createElement('style');\n  style.textContent = css;\n  document.head.appendChild(style);\n}\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","Admin","_s","_selectedReport$_id","reports","setReports","loading","setLoading","selectedReport","setSelectedReport","stats","setStats","total","pending","underReview","resolved","navigate","fetchReports","res","get","data","calculateStats","error","console","alert","reportsData","length","filter","r","status","updateReportStatus","reportId","newStatus","patch","updatedReports","map","report","_id","handleLogout","localStorage","removeItem","defaults","headers","common","getStatusColor","getStatusText","toUpperCase","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","style","styles","loadingContainer","children","spinner","fileName","_jsxFileName","lineNumber","columnNumber","container","className","headerContent","title","subtitle","onClick","refreshButton","logoutButton","icon","label","value","stat","i","sectionTitle","emptyState","_report$_id","_report$description","reportHeader","slice","reportDate","createdAt","statusBadge","backgroundColor","incidentType","description","closeButton","detailsContent","st","descriptionBox","_c","padding","background","minHeight","display","justifyContent","alignItems","height","width","border","borderTop","borderRadius","animation","flex","fontSize","fontWeight","color","cursor","marginBottom","margin","flexDirection","gap","textAlign","document","css","createElement","textContent","head","appendChild","$RefreshReg$"],"sources":["/home/wande/Desktop/Irene MERN Stack/mern-final-project-irenenderitu/client/src/pages/Admin.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Link, useNavigate } from 'react-router-dom';\n\n// const Admin = () => {\n//   const [reports, setReports] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [selectedReport, setSelectedReport] = useState(null);\n//   const [stats, setStats] = useState({\n//     total: 0,\n//     pending: 0,\n//     underReview: 0,\n//     resolved: 0\n//   });\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchReports();\n//   }, []);\n\n//   const fetchReports = async () => {\n//     try {\n//       // Try different endpoints - your backend might use one of these\n//       const res = await axios.get('/reports');\n//       setReports(res.data);\n//       calculateStats(res.data);\n//     } catch (error) {\n//       console.error('Error fetching reports:', error);\n//       // If the first endpoint fails, try alternatives\n//       try {\n//         const res = await axios.get('/reports');\n//         setReports(res.data);\n//         calculateStats(res.data);\n//       } catch (secondError) {\n//         console.error('Error with second attempt:', secondError);\n//         alert('Error fetching reports: ' + (secondError.response?.data?.message || 'Please check if the backend is running'));\n//       }\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const calculateStats = (reportsData) => {\n//     const stats = {\n//       total: reportsData.length,\n//       pending: reportsData.filter(r => r.status === 'pending').length,\n//       underReview: reportsData.filter(r => r.status === 'under_review').length,\n//       resolved: reportsData.filter(r => r.status === 'resolved').length\n//     };\n//     setStats(stats);\n//   };\n\n//   const updateReportStatus = async (reportId, newStatus) => {\n//     try {\n//       await axios.patch(`/reports/${reportId}/status`, { status: newStatus });\n      \n//       // Update local state\n//       const updatedReports = reports.map(report => \n//         report._id === reportId ? { ...report, status: newStatus } : report\n//       );\n      \n//       setReports(updatedReports);\n//       calculateStats(updatedReports);\n      \n//       if (selectedReport && selectedReport._id === reportId) {\n//         setSelectedReport({ ...selectedReport, status: newStatus });\n//       }\n      \n//       alert('Report status updated successfully!');\n//     } catch (error) {\n//       alert('Error updating report status: ' + (error.response?.data?.message || 'Something went wrong'));\n//     }\n//   };\n\n//   const handleLogout = () => {\n//     // Clear local storage\n//     localStorage.removeItem('token');\n//     localStorage.removeItem('user');\n    \n//     // Clear axios headers\n//     delete axios.defaults.headers.common['Authorization'];\n    \n//     // Redirect to landing page\n//     navigate('/');\n    \n//     // Optional: Show logout message\n//     alert('You have been logged out successfully.');\n//   };\n\n//   const getStatusColor = (status) => {\n//     switch (status) {\n//       case 'pending': return '#ffc107';\n//       case 'under_review': return '#17a2b8';\n//       case 'resolved': return '#28a745';\n//       default: return '#6c757d';\n//     }\n//   };\n\n//   const getStatusText = (status) => {\n//     switch (status) {\n//       case 'pending': return 'PENDING';\n//       case 'under_review': return 'UNDER REVIEW';\n//       case 'resolved': return 'RESOLVED';\n//       default: return status?.toUpperCase() || 'UNKNOWN';\n//     }\n//   };\n\n//   const formatDate = (dateString) => {\n//     if (!dateString) return 'Date not available';\n//     return new Date(dateString).toLocaleDateString('en-US', {\n//       year: 'numeric',\n//       month: 'short',\n//       day: 'numeric',\n//       hour: '2-digit',\n//       minute: '2-digit'\n//     });\n//   };\n\n//   // Debug: Check what data we're receiving\n//   useEffect(() => {\n//     if (reports.length > 0) {\n//       console.log('Reports data:', reports);\n//     }\n//   }, [reports]);\n\n//   if (loading) {\n//     return (\n//       <div style={styles.loadingContainer}>\n//         <div style={styles.spinner}></div>\n//         <p>Loading reports...</p>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Header */}\n//       <div style={styles.header}>\n//         <div style={styles.headerContent}>\n//           <h1 style={styles.title}>Admin Dashboard</h1>\n//           <p style={styles.subtitle}>Manage and process all user reports</p>\n//         </div>\n//         <div style={styles.headerActions}>\n//           <button \n//             onClick={fetchReports}\n//             style={styles.refreshButton}\n//           >\n//             🔄 Refresh Reports\n//           </button>\n//           <button \n//             onClick={handleLogout}\n//             style={styles.logoutButton}\n//           >\n//             🚪 Logout\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Statistics */}\n//       <div style={styles.statsGrid}>\n//         <div style={styles.statCard}>\n//           <div style={styles.statIcon}>📊</div>\n//           <div style={styles.statInfo}>\n//             <div style={styles.statNumber}>{stats.total}</div>\n//             <div style={styles.statLabel}>Total Reports</div>\n//           </div>\n//         </div>\n//         <div style={styles.statCard}>\n//           <div style={styles.statIcon}>⏳</div>\n//           <div style={styles.statInfo}>\n//             <div style={styles.statNumber}>{stats.pending}</div>\n//             <div style={styles.statLabel}>Pending</div>\n//           </div>\n//         </div>\n//         <div style={styles.statCard}>\n//           <div style={styles.statIcon}>🔍</div>\n//           <div style={styles.statInfo}>\n//             <div style={styles.statNumber}>{stats.underReview}</div>\n//             <div style={styles.statLabel}>Under Review</div>\n//           </div>\n//         </div>\n//         <div style={styles.statCard}>\n//           <div style={styles.statIcon}>✅</div>\n//           <div style={styles.statInfo}>\n//             <div style={styles.statNumber}>{stats.resolved}</div>\n//             <div style={styles.statLabel}>Resolved</div>\n//           </div>\n//         </div>\n//       </div>\n\n//       <div style={styles.content}>\n//         {/* Reports List */}\n//         <div style={styles.reportsSection}>\n//           <h2 style={styles.sectionTitle}>All User Reports ({reports.length})</h2>\n//           <div style={styles.reportsList}>\n//             {reports.length === 0 ? (\n//               <div style={styles.emptyState}>\n//                 <div style={styles.emptyIcon}>📋</div>\n//                 <h3>No reports found</h3>\n//                 <p>There are no reports in the system yet.</p>\n//                 <button onClick={fetchReports} style={styles.retryButton}>\n//                   🔄 Try Again\n//                 </button>\n//               </div>\n//             ) : (\n//               reports.map(report => (\n//                 <div \n//                   key={report._id} \n//                   style={{\n//                     ...styles.reportItem,\n//                     ...(selectedReport?._id === report._id ? styles.selectedReport : {})\n//                   }}\n//                   onClick={() => setSelectedReport(report)}\n//                 >\n//                   <div style={styles.reportHeader}>\n//                     <div style={styles.reportBasicInfo}>\n//                       <h4 style={styles.reportId}>\n//                         {report.reportId ? `Report #${report.reportId}` : `Report ${report._id?.slice(-6) || 'N/A'}`}\n//                       </h4>\n//                       <span style={styles.reportDate}>\n//                         {formatDate(report.createdAt)}\n//                       </span>\n//                     </div>\n//                     <div style={styles.statusSection}>\n//                       <span \n//                         style={{\n//                           ...styles.statusBadge,\n//                           backgroundColor: getStatusColor(report.status)\n//                         }}\n//                       >\n//                         {getStatusText(report.status)}\n//                       </span>\n//                     </div>\n//                   </div>\n                  \n//                   <div style={styles.reportPreview}>\n//                     <p style={styles.incidentType}>\n//                       <strong>Type:</strong> {report.incidentType ? report.incidentType.replace(/_/g, ' ').toUpperCase() : 'Not specified'}\n//                     </p>\n//                     <p style={styles.reportDescription}>\n//                       {report.description && report.description.length > 100 \n//                         ? `${report.description.substring(0, 100)}...` \n//                         : report.description || 'No description provided'}\n//                     </p>\n//                     <div style={styles.reportMeta}>\n//                       <span style={styles.metaItem}>\n//                         👤 {report.isAnonymous ? 'Anonymous' : (report.user?.name || report.userId?.name || 'User')}\n//                       </span>\n//                       <span style={styles.metaItem}>\n//                         📍 {report.location?.address || report.location || 'Location not specified'}\n//                       </span>\n//                       {report.evidence && report.evidence.length > 0 && (\n//                         <span style={styles.metaItem}>\n//                           📎 {report.evidence.length} file(s)\n//                         </span>\n//                       )}\n//                     </div>\n//                   </div>\n//                 </div>\n//               ))\n//             )}\n//           </div>\n//         </div>\n\n//         {/* Report Details */}\n//         {selectedReport && (\n//           <div style={styles.detailsSection}>\n//             <div style={styles.detailsHeader}>\n//               <h2 style={styles.detailsTitle}>\n//                 {selectedReport.reportId ? `Report #${selectedReport.reportId}` : `Report ${selectedReport._id?.slice(-6) || 'N/A'}`}\n//               </h2>\n//               <button \n//                 onClick={() => setSelectedReport(null)}\n//                 style={styles.closeButton}\n//               >\n//                 ×\n//               </button>\n//             </div>\n\n//             <div style={styles.detailsContent}>\n//               {/* Status Update Section */}\n//               <div style={styles.actionSection}>\n//                 <h3 style={styles.sectionSubtitle}>Update Status</h3>\n//                 <div style={styles.statusButtons}>\n//                   <button\n//                     onClick={() => updateReportStatus(selectedReport._id, 'pending')}\n//                     style={{\n//                       ...styles.statusButton,\n//                       ...(selectedReport.status === 'pending' ? styles.statusButtonActive : {})\n//                     }}\n//                   >\n//                     ⏳ Pending\n//                   </button>\n//                   <button\n//                     onClick={() => updateReportStatus(selectedReport._id, 'under_review')}\n//                     style={{\n//                       ...styles.statusButton,\n//                       ...(selectedReport.status === 'under_review' ? styles.statusButtonActive : {})\n//                     }}\n//                   >\n//                     🔍 Under Review\n//                   </button>\n//                   <button\n//                     onClick={() => updateReportStatus(selectedReport._id, 'resolved')}\n//                     style={{\n//                       ...styles.statusButton,\n//                       ...(selectedReport.status === 'resolved' ? styles.statusButtonActive : {})\n//                     }}\n//                   >\n//                     ✅ Resolved\n//                   </button>\n//                 </div>\n//               </div>\n\n//               {/* Report Details */}\n//               <div style={styles.detailSection}>\n//                 <h3 style={styles.sectionSubtitle}>Report Details</h3>\n//                 <div style={styles.detailGrid}>\n//                   <div style={styles.detailItem}>\n//                     <strong>Report ID:</strong> {selectedReport.reportId ? `#${selectedReport.reportId}` : selectedReport._id?.slice(-6) || 'N/A'}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Submitted:</strong> {formatDate(selectedReport.createdAt)}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Incident Type:</strong> {selectedReport.incidentType ? selectedReport.incidentType.replace(/_/g, ' ').toUpperCase() : 'Not specified'}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Incident Date:</strong> {formatDate(selectedReport.dateTime)}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Location:</strong> {selectedReport.location?.address || selectedReport.location || 'Not specified'}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Anonymous:</strong> {selectedReport.isAnonymous ? 'Yes' : 'No'}\n//                   </div>\n//                   <div style={styles.detailItem}>\n//                     <strong>Reported by:</strong> {selectedReport.isAnonymous ? 'Anonymous' : (selectedReport.user?.name || selectedReport.userId?.name || 'User')}\n//                   </div>\n//                   {!selectedReport.isAnonymous && (selectedReport.user?.email || selectedReport.userId?.email) && (\n//                     <div style={styles.detailItem}>\n//                       <strong>User Email:</strong> {selectedReport.user?.email || selectedReport.userId?.email}\n//                     </div>\n//                   )}\n//                 </div>\n//               </div>\n\n//               {/* Description */}\n//               <div style={styles.detailSection}>\n//                 <h3 style={styles.sectionSubtitle}>Description</h3>\n//                 <div style={styles.descriptionBox}>\n//                   {selectedReport.description || 'No description provided'}\n//                 </div>\n//               </div>\n\n//               {/* Evidence */}\n//               {selectedReport.evidence && selectedReport.evidence.length > 0 && (\n//                 <div style={styles.detailSection}>\n//                   <h3 style={styles.sectionSubtitle}>\n//                     Evidence ({selectedReport.evidence.length} file(s))\n//                   </h3>\n//                   <div style={styles.evidenceList}>\n//                     {selectedReport.evidence.map((file, index) => (\n//                       <a \n//                         key={index}\n//                         href={`http://localhost:5000/${file}`}\n//                         target=\"_blank\"\n//                         rel=\"noopener noreferrer\"\n//                         style={styles.evidenceItem}\n//                       >\n//                         <span style={styles.evidenceIcon}>📎</span>\n//                         <span style={styles.evidenceText}>\n//                           Evidence {index + 1} - {file}\n//                         </span>\n//                         <span style={styles.evidenceArrow}>→</span>\n//                       </a>\n//                     ))}\n//                   </div>\n//                 </div>\n//               )}\n\n//               {/* Current Status Display */}\n//               <div style={styles.detailSection}>\n//                 <h3 style={styles.sectionSubtitle}>Current Status</h3>\n//                 <div style={{\n//                   ...styles.statusBadge,\n//                   backgroundColor: getStatusColor(selectedReport.status),\n//                   fontSize: '14px',\n//                   padding: '8px 16px',\n//                   display: 'inline-block'\n//                 }}>\n//                   {getStatusText(selectedReport.status)}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {!selectedReport && reports.length > 0 && (\n//           <div style={styles.noSelection}>\n//             <div style={styles.noSelectionIcon}>📋</div>\n//             <h3>Select a Report</h3>\n//             <p>Click on a report from the list to view details and update its status.</p>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// const styles = {\n//   container: {\n//     padding: '1rem',\n//     maxWidth: '1400px',\n//     margin: '0 auto',\n//     backgroundColor: '#f8f9fa',\n//     minHeight: '100vh'\n//   },\n//   loadingContainer: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     height: '50vh',\n//     color: '#666'\n//   },\n//   spinner: {\n//     width: '40px',\n//     height: '40px',\n//     border: '4px solid #f3f3f3',\n//     borderTop: '4px solid #007bff',\n//     borderRadius: '50%',\n//     animation: 'spin 1s linear infinite',\n//     marginBottom: '1rem'\n//   },\n//   header: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     marginBottom: '2rem',\n//     flexWrap: 'wrap',\n//     gap: '1rem'\n//   },\n//   headerContent: {\n//     flex: 1\n//   },\n//   title: {\n//     fontSize: '2.5rem',\n//     fontWeight: '600',\n//     color: '#2c3e50',\n//     margin: '0 0 0.5rem 0'\n//   },\n//   subtitle: {\n//     fontSize: '1.2rem',\n//     color: '#6c757d',\n//     margin: 0\n//   },\n//   headerActions: {\n//     display: 'flex',\n//     gap: '1rem',\n//     alignItems: 'center'\n//   },\n//   refreshButton: {\n//     padding: '10px 20px',\n//     backgroundColor: '#28a745',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     fontSize: '1rem',\n//     fontWeight: '500',\n//     transition: 'background-color 0.3s',\n//     '&:hover': {\n//       backgroundColor: '#218838'\n//     }\n//   },\n//   logoutButton: {\n//     padding: '10px 20px',\n//     backgroundColor: '#dc3545',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     fontSize: '1rem',\n//     fontWeight: '500',\n//     transition: 'background-color 0.3s',\n//     '&:hover': {\n//       backgroundColor: '#c82333'\n//     }\n//   },\n//   statsGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(2, 1fr)',\n//     gap: '1rem',\n//     marginBottom: '2rem'\n//   },\n//   statCard: {\n//     backgroundColor: 'white',\n//     padding: '1.5rem',\n//     borderRadius: '12px',\n//     boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '1rem'\n//   },\n//   statIcon: {\n//     fontSize: '2rem'\n//   },\n//   statInfo: {\n//     flex: 1\n//   },\n//   statNumber: {\n//     fontSize: '2rem',\n//     fontWeight: 'bold',\n//     color: '#007bff',\n//     marginBottom: '0.25rem'\n//   },\n//   statLabel: {\n//     color: '#6c757d',\n//     fontWeight: '500',\n//     fontSize: '0.9rem'\n//   },\n//   content: {\n//     display: 'grid',\n//     gridTemplateColumns: '1fr 2fr',\n//     gap: '2rem',\n//     minHeight: '600px'\n//   },\n//   reportsSection: {\n//     backgroundColor: 'white',\n//     borderRadius: '12px',\n//     padding: '1.5rem',\n//     boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n//     display: 'flex',\n//     flexDirection: 'column'\n//   },\n//   sectionTitle: {\n//     fontSize: '1.5rem',\n//     color: '#2c3e50',\n//     margin: '0 0 1.5rem 0',\n//     fontWeight: '600'\n//   },\n//   reportsList: {\n//     flex: 1,\n//     overflowY: 'auto',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '1rem'\n//   },\n//   reportItem: {\n//     padding: '1.25rem',\n//     border: '2px solid #f1f3f4',\n//     borderRadius: '8px',\n//     cursor: 'pointer',\n//     transition: 'all 0.3s ease'\n//   },\n//   selectedReport: {\n//     borderColor: '#007bff',\n//     backgroundColor: '#f0f8ff'\n//   },\n//   reportHeader: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'flex-start',\n//     marginBottom: '0.75rem'\n//   },\n//   reportBasicInfo: {\n//     flex: 1\n//   },\n//   reportId: {\n//     margin: '0 0 0.25rem 0',\n//     color: '#2c3e50',\n//     fontSize: '1rem',\n//     fontWeight: '600'\n//   },\n//   reportDate: {\n//     color: '#6c757d',\n//     fontSize: '0.8rem'\n//   },\n//   statusSection: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '0.25rem',\n//     alignItems: 'flex-end'\n//   },\n//   statusBadge: {\n//     padding: '4px 8px',\n//     borderRadius: '12px',\n//     color: 'white',\n//     fontSize: '10px',\n//     fontWeight: 'bold',\n//     textTransform: 'uppercase'\n//   },\n//   reportPreview: {\n//     color: '#666'\n//   },\n//   incidentType: {\n//     margin: '0 0 0.5rem 0',\n//     fontSize: '0.9rem'\n//   },\n//   reportDescription: {\n//     margin: '0 0 0.75rem 0',\n//     fontSize: '0.85rem',\n//     lineHeight: '1.4'\n//   },\n//   reportMeta: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '0.25rem'\n//   },\n//   metaItem: {\n//     fontSize: '0.8rem',\n//     color: '#6c757d'\n//   },\n//   detailsSection: {\n//     backgroundColor: 'white',\n//     borderRadius: '12px',\n//     padding: '1.5rem',\n//     boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n//     display: 'flex',\n//     flexDirection: 'column'\n//   },\n//   noSelection: {\n//     backgroundColor: 'white',\n//     borderRadius: '12px',\n//     padding: '3rem',\n//     boxShadow: '0 2px 10px rgba(0,0,0,0.1)',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     textAlign: 'center',\n//     color: '#666'\n//   },\n//   noSelectionIcon: {\n//     fontSize: '3rem',\n//     marginBottom: '1rem'\n//   },\n//   detailsHeader: {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     marginBottom: '1.5rem',\n//     paddingBottom: '1rem',\n//     borderBottom: '1px solid #f1f3f4'\n//   },\n//   detailsTitle: {\n//     margin: 0,\n//     color: '#2c3e50',\n//     fontSize: '1.5rem',\n//     fontWeight: '600'\n//   },\n//   closeButton: {\n//     background: 'none',\n//     border: 'none',\n//     fontSize: '1.5rem',\n//     color: '#6c757d',\n//     cursor: 'pointer',\n//     padding: '0.25rem'\n//   },\n//   detailsContent: {\n//     flex: 1,\n//     overflowY: 'auto',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '1.5rem'\n//   },\n//   actionSection: {\n//     padding: '1rem',\n//     backgroundColor: '#f8f9fa',\n//     borderRadius: '8px',\n//     border: '1px solid #e9ecef'\n//   },\n//   sectionSubtitle: {\n//     fontSize: '1.1rem',\n//     color: '#2c3e50',\n//     margin: '0 0 1rem 0',\n//     fontWeight: '600'\n//   },\n//   statusButtons: {\n//     display: 'flex',\n//     gap: '0.5rem',\n//     flexWrap: 'wrap'\n//   },\n//   statusButton: {\n//     padding: '8px 16px',\n//     border: '2px solid #e9ecef',\n//     borderRadius: '6px',\n//     backgroundColor: 'white',\n//     cursor: 'pointer',\n//     fontSize: '0.9rem',\n//     fontWeight: '500',\n//     transition: 'all 0.3s ease'\n//   },\n//   statusButtonActive: {\n//     borderColor: '#007bff',\n//     backgroundColor: '#007bff',\n//     color: 'white'\n//   },\n//   detailSection: {\n//     padding: '1rem 0',\n//     borderBottom: '1px solid #f1f3f4'\n//   },\n//   detailGrid: {\n//     display: 'grid',\n//     gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n//     gap: '0.75rem'\n//   },\n//   detailItem: {\n//     fontSize: '0.9rem',\n//     color: '#666'\n//   },\n//   descriptionBox: {\n//     padding: '1rem',\n//     backgroundColor: '#f8f9fa',\n//     borderRadius: '6px',\n//     border: '1px solid #e9ecef',\n//     fontSize: '0.9rem',\n//     lineHeight: '1.5',\n//     color: '#666'\n//   },\n//   evidenceList: {\n//     display: 'flex',\n//     flexDirection: 'column',\n//     gap: '0.5rem'\n//   },\n//   evidenceItem: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     gap: '0.75rem',\n//     padding: '0.75rem',\n//     backgroundColor: '#f8f9fa',\n//     border: '1px solid #e9ecef',\n//     borderRadius: '6px',\n//     textDecoration: 'none',\n//     color: '#495057',\n//     transition: 'all 0.3s ease'\n//   },\n//   evidenceIcon: {\n//     fontSize: '1rem'\n//   },\n//   evidenceText: {\n//     flex: 1,\n//     fontSize: '0.9rem'\n//   },\n//   evidenceArrow: {\n//     color: '#007bff',\n//     fontWeight: 'bold'\n//   },\n//   emptyState: {\n//     textAlign: 'center',\n//     padding: '3rem 2rem',\n//     color: '#666'\n//   },\n//   emptyIcon: {\n//     fontSize: '3rem',\n//     marginBottom: '1rem'\n//   },\n//   retryButton: {\n//     padding: '10px 20px',\n//     backgroundColor: '#007bff',\n//     color: 'white',\n//     border: 'none',\n//     borderRadius: '6px',\n//     cursor: 'pointer',\n//     fontSize: '1rem',\n//     fontWeight: '500',\n//     marginTop: '1rem',\n//     '&:hover': {\n//       backgroundColor: '#0056b3'\n//     }\n//   }\n// };\n\n// // Add CSS animations\n// const additionalStyles = `\n//   @keyframes spin {\n//     0% { transform: rotate(0deg); }\n//     100% { transform: rotate(360deg); }\n//   }\n\n//   .reportItem:hover {\n//     border-color: #007bff;\n//     background-color: #f8f9fa;\n//   }\n\n//   .statusButton:hover {\n//     border-color: #007bff;\n//     background-color: #f0f8ff;\n//   }\n\n//   .evidenceItem:hover {\n//     background-color: #e9ecef;\n//     border-color: #007bff;\n//   }\n\n//   .logoutButton:hover {\n//     background-color: #c82333;\n//   }\n\n//   @media (max-width: 1024px) {\n//     .content {\n//       grid-template-columns: 1fr;\n//     }\n    \n//     .statsGrid {\n//       grid-template-columns: 1fr;\n//     }\n    \n//     .header {\n//       flex-direction: column;\n//       text-align: center;\n//     }\n    \n//     .headerActions {\n//       justify-content: center;\n//     }\n//   }\n// `;\n\n// // Inject styles\n// if (typeof document !== 'undefined') {\n//   const style = document.createElement('style');\n//   style.textContent = additionalStyles;\n//   document.head.appendChild(style);\n// }\n\n// export default Admin;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Admin = () => {\n  const [reports, setReports] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedReport, setSelectedReport] = useState(null);\n  const [stats, setStats] = useState({\n    total: 0,\n    pending: 0,\n    underReview: 0,\n    resolved: 0\n  });\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchReports();\n  }, []);\n\n  const fetchReports = async () => {\n    try {\n      const res = await axios.get('/reports');\n      setReports(res.data);\n      calculateStats(res.data);\n    } catch (error) {\n      console.error('Error fetching reports:', error);\n      alert('Error fetching reports. Please check your backend connection.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const calculateStats = (reportsData) => {\n    const stats = {\n      total: reportsData.length,\n      pending: reportsData.filter(r => r.status === 'pending').length,\n      underReview: reportsData.filter(r => r.status === 'under_review').length,\n      resolved: reportsData.filter(r => r.status === 'resolved').length\n    };\n    setStats(stats);\n  };\n\n  const updateReportStatus = async (reportId, newStatus) => {\n    try {\n      await axios.patch(`/reports/${reportId}/status`, { status: newStatus });\n      const updatedReports = reports.map(report => \n        report._id === reportId ? { ...report, status: newStatus } : report\n      );\n      setReports(updatedReports);\n      calculateStats(updatedReports);\n      if (selectedReport && selectedReport._id === reportId) {\n        setSelectedReport({ ...selectedReport, status: newStatus });\n      }\n      alert('Report status updated successfully!');\n    } catch (error) {\n      alert('Error updating report status.');\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    delete axios.defaults.headers.common['Authorization'];\n    navigate('/');\n    alert('Logged out successfully.');\n  };\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'pending': return '#ffc107';\n      case 'under_review': return '#17a2b8';\n      case 'resolved': return '#28a745';\n      default: return '#6c757d';\n    }\n  };\n\n  const getStatusText = (status) => {\n    switch (status) {\n      case 'pending': return 'PENDING';\n      case 'under_review': return 'UNDER REVIEW';\n      case 'resolved': return 'RESOLVED';\n      default: return status?.toUpperCase() || 'UNKNOWN';\n    }\n  };\n\n  const formatDate = (dateString) => {\n    if (!dateString) return 'Date not available';\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric', month: 'short', day: 'numeric',\n      hour: '2-digit', minute: '2-digit'\n    });\n  };\n\n  if (loading) {\n    return (\n      <div style={styles.loadingContainer}>\n        <div style={styles.spinner}></div>\n        <p>Loading reports...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div style={styles.container}>\n      {/* Header */}\n      <div className=\"header\">\n        <div style={styles.headerContent}>\n          <h1 style={styles.title}>Admin Dashboard</h1>\n          <p style={styles.subtitle}>Manage and process all user reports</p>\n        </div>\n        <div className=\"headerActions\">\n          <button onClick={fetchReports} style={styles.refreshButton}>🔄 Refresh</button>\n          <button onClick={handleLogout} style={styles.logoutButton}>🚪 Logout</button>\n        </div>\n      </div>\n\n      {/* Stats */}\n      <div className=\"statsGrid\">\n        {[\n          { icon: '📊', label: 'Total Reports', value: stats.total },\n          { icon: '⏳', label: 'Pending', value: stats.pending },\n          { icon: '🔍', label: 'Under Review', value: stats.underReview },\n          { icon: '✅', label: 'Resolved', value: stats.resolved }\n        ].map((stat, i) => (\n          <div key={i} className=\"statCard\">\n            <div className=\"statIcon\">{stat.icon}</div>\n            <div>\n              <div className=\"statNumber\">{stat.value}</div>\n              <div className=\"statLabel\">{stat.label}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Main Content */}\n      <div className=\"content\">\n        <div className=\"reportsSection\">\n          <h2 style={styles.sectionTitle}>All Reports ({reports.length})</h2>\n          <div className=\"reportsList\">\n            {reports.length === 0 ? (\n              <div style={styles.emptyState}>No reports found.</div>\n            ) : (\n              reports.map(report => (\n                <div\n                  key={report._id}\n                  className={`reportItem ${selectedReport?._id === report._id ? 'selected' : ''}`}\n                  onClick={() => setSelectedReport(report)}\n                >\n                  <div style={styles.reportHeader}>\n                    <div>\n                      <h4 style={styles.reportId}>\n                        {report.reportId ? `Report #${report.reportId}` : `Report ${report._id?.slice(-6)}`}\n                      </h4>\n                      <span style={styles.reportDate}>{formatDate(report.createdAt)}</span>\n                    </div>\n                    <span style={{\n                      ...styles.statusBadge,\n                      backgroundColor: getStatusColor(report.status)\n                    }}>\n                      {getStatusText(report.status)}\n                    </span>\n                  </div>\n                  <p><strong>Type:</strong> {report.incidentType || 'Not specified'}</p>\n                  <p>{report.description?.slice(0, 100) || 'No description'}</p>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n\n        {/* Report Details */}\n        {selectedReport && (\n          <div className=\"detailsSection\">\n            <div className=\"detailsHeader\">\n              <h2>{selectedReport.reportId ? `Report #${selectedReport.reportId}` : `Report ${selectedReport._id?.slice(-6)}`}</h2>\n              <button onClick={() => setSelectedReport(null)} style={styles.closeButton}>×</button>\n            </div>\n            <div style={styles.detailsContent}>\n              <h3>Status</h3>\n              <div className=\"statusButtons\">\n                {['pending', 'under_review', 'resolved'].map(st => (\n                  <button\n                    key={st}\n                    onClick={() => updateReportStatus(selectedReport._id, st)}\n                    className={`statusButton ${selectedReport.status === st ? 'active' : ''}`}\n                  >\n                    {getStatusText(st)}\n                  </button>\n                ))}\n              </div>\n              <h3>Description</h3>\n              <div style={styles.descriptionBox}>{selectedReport.description}</div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst styles = {\n  container: { padding: '1rem', background: '#f8f9fa', minHeight: '100vh' },\n  loadingContainer: { display: 'flex', justifyContent: 'center', alignItems: 'center', height: '60vh' },\n  spinner: { width: '40px', height: '40px', border: '4px solid #eee', borderTop: '4px solid #007bff', borderRadius: '50%', animation: 'spin 1s linear infinite' },\n  headerContent: { flex: 1 },\n  title: { fontSize: '2rem', fontWeight: '600', color: '#2c3e50' },\n  subtitle: { color: '#6c757d' },\n  refreshButton: { background: '#28a745', color: '#fff', border: 'none', borderRadius: '6px', padding: '10px 15px', cursor: 'pointer' },\n  logoutButton: { background: '#dc3545', color: '#fff', border: 'none', borderRadius: '6px', padding: '10px 15px', cursor: 'pointer' },\n  sectionTitle: { fontSize: '1.5rem', fontWeight: '600', marginBottom: '1rem' },\n  reportHeader: { display: 'flex', justifyContent: 'space-between', alignItems: 'center' },\n  reportId: { margin: 0 },\n  reportDate: { fontSize: '0.8rem', color: '#6c757d' },\n  statusBadge: { padding: '4px 8px', borderRadius: '8px', color: 'white', fontWeight: 'bold', fontSize: '0.75rem' },\n  closeButton: { border: 'none', background: 'transparent', fontSize: '1.5rem', cursor: 'pointer' },\n  detailsContent: { display: 'flex', flexDirection: 'column', gap: '1rem' },\n  descriptionBox: { background: '#f8f9fa', padding: '1rem', borderRadius: '6px', border: '1px solid #e9ecef' },\n  emptyState: { textAlign: 'center', color: '#6c757d', padding: '2rem' }\n};\n\n// Inject responsive CSS\nif (typeof document !== 'undefined') {\n  const css = `\n    @keyframes spin { 0%{transform:rotate(0)}100%{transform:rotate(360deg)} }\n\n    .header { display:flex; justify-content:space-between; align-items:center; flex-wrap:wrap; gap:1rem; }\n    .headerActions { display:flex; gap:1rem; flex-wrap:wrap; }\n\n    .statsGrid { display:grid; grid-template-columns:repeat(auto-fit,minmax(200px,1fr)); gap:1rem; margin-bottom:2rem; }\n    .statCard { background:white; display:flex; align-items:center; gap:1rem; padding:1rem; border-radius:12px; box-shadow:0 2px 8px rgba(0,0,0,0.1); }\n    .statIcon { font-size:2rem; }\n    .statNumber { font-size:1.8rem; font-weight:bold; color:#007bff; }\n\n    .content { display:grid; grid-template-columns:1fr 2fr; gap:2rem; }\n    .reportsSection, .detailsSection { background:white; border-radius:12px; padding:1.5rem; box-shadow:0 2px 8px rgba(0,0,0,0.1); }\n\n    .reportsList { max-height:70vh; overflow-y:auto; display:flex; flex-direction:column; gap:1rem; }\n    .reportItem { border:1px solid #e9ecef; padding:1rem; border-radius:8px; cursor:pointer; transition:all .3s; }\n    .reportItem:hover { background:#f8f9fa; }\n    .reportItem.selected { border-color:#007bff; background:#f0f8ff; }\n\n    .detailsHeader { display:flex; justify-content:space-between; align-items:center; border-bottom:1px solid #e9ecef; margin-bottom:1rem; padding-bottom:.5rem; }\n    .statusButtons { display:flex; flex-wrap:wrap; gap:.5rem; }\n    .statusButton { border:1px solid #ddd; background:white; padding:.5rem 1rem; border-radius:6px; cursor:pointer; }\n    .statusButton.active { background:#007bff; color:white; }\n\n    @media(max-width:1024px){\n      .content{grid-template-columns:1fr;}\n    }\n\n    @media(max-width:600px){\n      .header{text-align:center;}\n      .statsGrid{grid-template-columns:1fr;}\n      .headerActions{justify-content:center;}\n      .statNumber{font-size:1.5rem;}\n    }\n  `;\n  const style = document.createElement('style');\n  style.textContent = css;\n  document.head.appendChild(style);\n}\n\nexport default Admin;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}